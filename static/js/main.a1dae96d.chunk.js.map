{"version":3,"sources":["data.js","logo.svg","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","image","제목","styled","div","Info","props","재고","className","onClick","재고변경","Detail","useState","alert","alertChange","inputData","setInputData","useEffect","timer","setTimeout","clearTimeout","history","useHistory","useParams","finditem","shoes","find","item","onChange","e","target","value","src","width","push","Card","to","i","App","Data","shoes변경","a","axios","get","then","response","console","log","data","catch","href","type","role","placeholder","exact","path","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1dae96d.chunk.js","sourcesContent":["// 파일 쪼갤때 활용하는 import / export\r\n// 내보내기 : export default 변수명\r\n// 가져오기 : import 변수명(암거나) from 경로\r\n\r\n\r\n//다수로 내보내야 할때\r\n\r\n// 내보내기 : export{변수1 , 변수2}\r\n// 가져오기 : import{변수1 , 변수2} from 경로\r\n\r\n\r\nexport default [\r\n\r\n        {\r\n           id      : 0,\r\n           title   : \"White and Black\",\r\n           content : \"Born in France\",\r\n           price   : 120000 ,\r\n           image   : \"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n         },\r\n      \r\n         {\r\n           id      : 1,\r\n           title   : \"Red Knit\",\r\n           content : \"Born in Seoul\",\r\n           price   : 110000 ,\r\n           image   : \"https://codingapple1.github.io/shop/shoes2.jpg\"\r\n         },\r\n      \r\n         {\r\n           id      : 2,\r\n           title   : \"Grey Yordan\",\r\n           content : \"Born in the States\",\r\n           price   : 130000 ,\r\n           image   : \"https://codingapple1.github.io/shop/shoes3.jpg\"\r\n         }\r\n    \r\n ]","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\r\nimport React , { useEffect, useState } from 'react';\r\nimport { useHistory , useParams } from 'react-router-dom';\r\n// 라우터의 useParams 훅\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\n\r\n\r\n\r\n//Hook 의 종류를 살펴보자\r\n//class Detail2 extends React.Component{\r\n\r\n    //Detail2 컴포넌트가 Mount 되었을때 실행할 코드\r\n    // Ajax 같은것도 이곳에 자주 사용한다.\r\n    //componentDidMount() {\r\n\r\n   // }\r\n\r\n    //Detail2 컴포넌트가 Unmount 되기 직전에 실행할 코드\r\n   // componentWillUnmount() {\r\n\r\n   // }\r\n//}\r\n\r\n// ==> 근데 이것말고 좀더 쉬운 문법이 개발되었다.\r\n//     바로 useEffect 이다.\r\n\r\n\r\nlet box = styled.div`\r\n\r\n    padding : 20px;\r\n    \r\n`;\r\n\r\nlet 제목 = styled.div`\r\n\r\n    font-size : 25px;\r\n\r\n`;\r\n\r\n\r\n        function Detail( props ){\r\n\r\n\r\n\r\n            // alert 5초뒤에 보이게끔 하기위해 구문 작성\r\n            const [alert , alertChange] = useState(true);\r\n\r\n            //임시 state 만들어보기(재렌더링 해보기 위해서)\r\n            const [inputData , setInputData] = useState('');\r\n\r\n            // useEffect\r\n            //라이프사이클과 똑같은 기능을 합니다.\r\n            //컴포넌트가 딱 보일때 실행이 되고 , 업데이트 될때도\r\n            //실행이 된다.\r\n\r\n\r\n            // Detail 컴포넌트가 등장 & 업데이트시 실행할 코드 useEffect\r\n            // * useEffect가 여러개 있을경우 윗순서부터 실행이 된다.\r\n            // 첫번쨰로실행\r\n            useEffect( () => {\r\n\r\n              \r\n\r\n                //Detail 페이지 방문 후 alert 창이 2초후에 사라지게 해보자.\r\n               let timer =  setTimeout( () => {\r\n                    \r\n                    //여기에 alert 창 안보이게끔 하는 구문을 작성\r\n                    alertChange(false)\r\n\r\n                    //<Detail> 이 사라질때 실행되는 코드\r\n                    //버그같은걸 염두해두고 쓰는 코드\r\n                    return () => {\r\n                        clearTimeout(timer)\r\n                    }\r\n\r\n                } , 3000 );\r\n\r\n\r\n            } , [alert]);\r\n                //  [] : useEffect가 실행될 조건을 넣을 수가 있다.\r\n                //  useEffect는 뭔가를 업데이트 할때마다 계속 재렌더링이 실행이 된다..\r\n                //  그렇게 되면 자원낭비가 심하기때문에 이쁘게 써야한다.\r\n                //alert 라는 조건을 넣게 되면\r\n                //alert라는 state 가 변경이 될때만 재렌더링이 된다.\r\n                // [] 빈배열로 둘시에 한번만 실행되고 더이상 실행되지 않는다.\r\n\r\n\r\n\r\n\r\n            //두번쨰로 실행\r\n            useEffect ( () => {\r\n\r\n                //컴포넌트가 사라질떄 코드를 실행시킬수도 있다.\r\n                return () => {\r\n                    //이 구간이 사라질때 코드를 실행한다.\r\n\r\n                }\r\n            } , []);\r\n\r\n\r\n \r\n\r\n\r\n            //방문기록등을 저장해놓는 오브젝트 useHistory\r\n            let history = useHistory();\r\n\r\n            // 라우터의 useParams 훅\r\n            let { id } = useParams();\r\n\r\n            // find() 라는 신문법\r\n            // Array 안에서 원하는 자료를 찾고 싶을때 사용\r\n            // \r\n            let finditem = props.shoes.find(function (item){\r\n                \r\n                // 조건식 참인것만 변수에 데이터 저장해줌\r\n                return item.id == id\r\n\r\n            });\r\n\r\n\r\n\r\n            \r\n            return (\r\n        \r\n            <div className=\"container\">\r\n                \r\n             <제목 className=\"red\">\r\n                        Detail\r\n             </제목>\r\n                \r\n                {/* useEffect -> 재렌더링이 계속 진행되는 상황 */}\r\n                {inputData}\r\n                <input onChange={ (e) => { setInputData(e.target.value) } }/>\r\n\r\n                {/* useState alert 삼항연산자 활용 */}\r\n                {\r\n                    alert === true \r\n                    ?(<div className=\"my-alert\">\r\n                        <p>재고가 얼마 남지 않았습니다.</p>\r\n                     </div>)\r\n                    : null\r\n\r\n                }\r\n             \r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <img src={finditem.image} width=\"100%\"></img>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4\">\r\n                        <h4 className=\"pt-5\">{finditem.title}</h4>\r\n                        <p>{finditem.content}</p>\r\n                        <p>{finditem.price}원</p>\r\n                        {/* 재고데이터 */}\r\n                        <Info 재고={props.재고} 재고변경={props.재고변경}></Info>\r\n                        <br/>\r\n                        <button className=\"btn btn-danger\" onClick={ () => { props.재고변경(props.재고-1) }}>주문하기</button> {/* goBack() 함수 : 뒤로가기 push(); :이쪽으로 보내주세요 */}                                                                                \r\n                        <button className=\"btn btn-info\"   onClick={ () => { history.push(\"/\") }}>뒤로가기</button> \r\n                    </div>\r\n                </div>\r\n            </div> \r\n        \r\n            )\r\n        }\r\n\r\n        function Info(props){\r\n\r\n            function 재고감소(){\r\n\r\n                props.재고변경(props.재고-1)     \r\n\r\n\r\n            }\r\n\r\n            function 재고증가(){\r\n\r\n                props.재고변경(props.재고+1)     \r\n\r\n\r\n            }\r\n\r\n\r\n            return (\r\n                <>\r\n                <p>재고 : {props.재고}</p>\r\n                <div>\r\n                    <button className=\"btn btn-success\" onClick={재고증가}>+</button>&nbsp;\r\n                    <button className=\"btn btn-primary\" onClick={재고감소}>-</button>\r\n                </div>\r\n                </>\r\n            );\r\n\r\n        }\r\n\r\n\r\n\r\n        export default Detail;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Button , Navber , Container , Nav , NavDropdown , Jumbotron} from 'react-bootstrap';\nimport React , { useState } from 'react';\nimport Data from './data.js';\nimport { map } from 'bluebird';\nimport { Route , Link , Switch } from 'react-router-dom';\nimport Detail from './Detail';\nimport axios from 'axios';\n\n\n\nfunction App() {\n\n  //                                 이 Data에 data.js 내용이 들어간다.\n  let [shoes , shoes변경] = useState(Data);\n\n  let [data , setData] = useState(null);\n\n  //상품 재고 표시해보기\n  let [재고 , 재고변경] = useState(10);\n\n\n\n\n  const onClick = async() => {\n\n    //POST 로 요청하는 방법\n    //axios.post('서버URL' , { id : 'codingapple' , pw : 1234 });\n\n\n      const response = await axios.get('https://codingapple1.github.io/shop/data2.json')\n      .then( (response) => {\n\n        console.log(response.data)\n\n        //... : 대괄호를 없애주세요 라는 뜻 , \n        //하지만 [] 이걸 다시 썼기때문에 독립적인 카피본이 만들어진것이다.\n        shoes변경( [...shoes , ...response.data] )\n\n      })\n      .catch( () => {\n\n        console.log('실패입니다.')\n\n      })\n     \n      \n     \n     \n\n    \n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">NYShop</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                     Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/detail\">\n                  {/* <Link to=\"/detail\"> */}\n                      Detail\n                  {/* </Link> */}\n                </a>\n              </li>\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Dropdown\n                </a>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\n                  <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\n                  <li><hr className=\"dropdown-divider\"></hr></li>\n                  <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                </ul>\n              </li>\n            </ul>\n            <form className=\"d-flex\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n            </form>\n          </div>\n        </div>\n      </nav>\n\n\n  {/* Switch 안에 담으면 Route 들이 하나씩만 보임\n   원래는 / 뒤에는 다보이게끔 하는게 Route의 특징이나 Switch는\n   하나씩만 보이게끔 하는거임 */}\n  <Switch>\n    {/* exact : 경로가 정확히 일치 할때만 보여준다. */}\n    <Route exact path=\"/\">\n      <div>      \n          <div className=\"jumbotron\" className=\"background\">\n            <h1 className=\"display-4\">Season sale 20% OFF!</h1>\n            <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n            <hr className=\"my-4\" />\n            <p>It uses utility classNamees for typography and spacing to space content out within the larger container.</p>\n            <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n        </div> \n      </div>\n      <div className=\"Container\">\n        <div className=\"row\">\n            {/* shoes라는 state는 부모컴포넌트가 가지고 있음 \n            그걸 자식 컴포넌트가 사용하고 싶으면 props 전송해줘야함*/}\n            {\n              shoes.map( (a,i) => {\n\n                                  // 슈즈에대한 정보와 이미지1,2,3 차례순 i값 가져오기\n                return <Card shoes={shoes[i]} i={i} key={i}/>\n\n              })\n            }\n        </div> \n        <button className=\"btn btn-primary\" onClick={onClick}>더보기</button>\n        \n      </div>\n    </Route>\n\n    {/* / 뒤로 시작하는건 다 보여진다 그래서 만일\n   나는 딱 이부분만 보고싶다 하면 exact를 쓰는거다 */}\n   {/* : 뒤에 아무 문자가 오든간에 이 페이지로 이동시켜주세요 라는 뜻 \n      즉 아무 문자나 받겠다는 URL 작명법 /detail/:id\n      1. 콜론 뒤에는 맘대로 작명\n      2. 여러개 사용 가능하다. :id/:id2 */}\n    <Route exact path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n    </Route>\n\n      {/*     /모든문자 의미 */}\n      <Route path=\"/:id\">\n            <div>서비스 준비중입니다.</div>\n      </Route>\n    </Switch>\n\n    </div>\n  );\n}\n\n\n//          shoes를 들고오기 위해서\nfunction Card(props){\n\n  return (\n    <div className=\"col-md-6 mt-4\">                         {/* 이미지주소 1,2,3 값  반복문돌리기 위해서 */}              \n        <Link to={\"/detail/\" + (props.i)}><img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"50%\"></img></Link>\n        <h4>{props.shoes.title }</h4>\n        <p>{ props.shoes.content } & { props.shoes.price }</p>\n    </div>\n  )\n}\n\n\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}